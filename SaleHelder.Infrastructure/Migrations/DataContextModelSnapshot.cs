// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Presentation.Data;

#nullable disable

namespace SaleHelder.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SaleHelder.Shared.Entities.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriaId");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("SaleHelder.Shared.Entities.Departamento", b =>
                {
                    b.Property<int>("DepartamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartamentoId"));

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartamentoId");

                    b.HasIndex("IdCategoria");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("SaleHelder.Shared.Entities.FaQ", b =>
                {
                    b.Property<int>("FaQId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FaQId"));

                    b.Property<int>("IdDepartamento")
                        .HasColumnType("int");

                    b.Property<string>("Pregunta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Respuesta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FaQId");

                    b.HasIndex("IdDepartamento");

                    b.ToTable("FaQ", (string)null);
                });

            modelBuilder.Entity("SaleHelder.Shared.Entities.Issue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdFaq")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdFaq");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Issue", (string)null);
                });

            modelBuilder.Entity("SaleHelder.Shared.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("SaleHelder.Shared.Entities.Departamento", b =>
                {
                    b.HasOne("SaleHelder.Shared.Entities.Categoria", "categoria")
                        .WithMany("Departamentos")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categoria");
                });

            modelBuilder.Entity("SaleHelder.Shared.Entities.FaQ", b =>
                {
                    b.HasOne("SaleHelder.Shared.Entities.Departamento", "departamento")
                        .WithMany("FaQs")
                        .HasForeignKey("IdDepartamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("departamento");
                });

            modelBuilder.Entity("SaleHelder.Shared.Entities.Issue", b =>
                {
                    b.HasOne("SaleHelder.Shared.Entities.FaQ", "FaQ")
                        .WithMany("issues")
                        .HasForeignKey("IdFaq")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SaleHelder.Shared.Entities.User", "User")
                        .WithMany("issues")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FaQ");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SaleHelder.Shared.Entities.User", b =>
                {
                    b.HasOne("SaleHelder.Shared.Entities.Departamento", "Departamento")
                        .WithMany("Usuarios")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("SaleHelder.Shared.Entities.Categoria", b =>
                {
                    b.Navigation("Departamentos");
                });

            modelBuilder.Entity("SaleHelder.Shared.Entities.Departamento", b =>
                {
                    b.Navigation("FaQs");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SaleHelder.Shared.Entities.FaQ", b =>
                {
                    b.Navigation("issues");
                });

            modelBuilder.Entity("SaleHelder.Shared.Entities.User", b =>
                {
                    b.Navigation("issues");
                });
#pragma warning restore 612, 618
        }
    }
}
